version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aiser-postgres
    environment:
      POSTGRES_DB: aiser_world
      POSTGRES_USER: aiser
      POSTGRES_PASSWORD: aiser_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aiser -d aiser_world"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aiser-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Authentication Service
  auth-service:
    image: python:3.11-slim
    container_name: aiser-auth
    working_dir: /app
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_DB=aiser_world
      - POSTGRES_USER=aiser
      - POSTGRES_PASSWORD=aiser_password
      - POSTGRES_PORT=5432
      - SECRET_KEY=dev-secret-key
      - DEBUG=True
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./packages/auth:/app
      - auth_poetry_cache:/root/.cache/pypoetry
    command: >
      bash -c "
        apt-get update && apt-get install -y build-essential libpq-dev libjpeg-dev libpng-dev libfreetype6-dev libtiff5-dev libwebp-dev libopenjp2-7-dev zlib1g-dev curl &&
        pip install poetry &&
        poetry install &&
        poetry run uvicorn src.app.main:app --host 0.0.0.0 --port 5000 --reload
      "

  # Cube.js Universal Semantic Layer
  cube-server:
    image: node:18-alpine
    container_name: aiser-cube
    working_dir: /app
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - CUBE_DB_TYPE=postgres
      - CUBE_DB_HOST=postgres
      - CUBE_DB_PORT=5432
      - CUBE_DB_NAME=aiser_world
      - CUBE_DB_USER=aiser
      - CUBE_DB_PASS=aiser_password
      - CUBE_DB_SCHEMA=public
      - CUBE_DB_SSL=false
      - CUBE_DB_POOL_MIN=2
      - CUBE_DB_POOL_MAX=10
      - CUBE_REDIS_URL=redis://redis:6379
      - CUBE_API_SECRET=dev-cube-secret-key
      - CUBE_DEV_MODE=true
      - CUBE_LOG_LEVEL=info
      - CUBEJS_EXTERNAL_DEFAULT=true
      - CUBEJS_SCHEDULED_REFRESH_DEFAULT=true
      - CUBEJS_SKIP_NATIVE_EXTENSIONS=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/cube:/app
      - cube_node_modules:/app/node_modules
    command: >
      sh -c "
        npm install &&
        npm run dev
      "
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/cubejs-api/v1/load"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Chat2Chart Server
  chat2chart-server:
    image: python:3.11-slim
    container_name: aiser-chat2chart
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_DB=aiser_world
      - POSTGRES_USER=aiser
      - POSTGRES_PASSWORD=aiser_password
      - POSTGRES_PORT=5432
      - AZURE_OPENAI_API_KEY=35rWswdPyyyisuGwl2tgrlxFtfLhjD0cFDQaJi44YzBx91Rz3nINJQQJ99BEACHYHv6XJ3w3AAABACOGbUlA
      - AZURE_OPENAI_ENDPOINT=https://ateybot-eastus2-123-nut.openai.azure.com/
      - AZURE_OPENAI_API_VERSION=2025-04-01-preview
      - AZURE_OPENAI_DEPLOYMENT_NAME=gpt-5-mini
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your-openai-key}
      - OPENAI_MODEL_ID=gpt-4o-mini
      - SECRET_KEY=dev-secret-key
      - CUBE_API_URL=http://cube-server:4000/cubejs-api/v1
      - CUBE_API_SECRET=dev-cube-secret-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      cube-server:
        condition: service_healthy
    volumes:
      - ./packages/chat2chart/server:/app
      - chat2chart_poetry_cache:/root/.cache/pypoetry
    command: >
      bash -c "
        apt-get update && apt-get install -y build-essential libpq-dev libjpeg-dev libpng-dev libfreetype6-dev libtiff5-dev libwebp-dev libopenjp2-7-dev zlib1g-dev curl &&
        pip install poetry &&
        poetry install &&
        poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  postgres_data:
  redis_data:
  cube_node_modules:
  auth_poetry_cache:
  chat2chart_poetry_cache:

networks:
  default:
    name: aiser-network