# Cube.js Universal Semantic Layer Configuration
# Multi-tenant architecture with enterprise features

# =============================================================================
# CORE CUBE.JS CONFIGURATION
# =============================================================================

# Server Configuration
NODE_ENV=development
CUBE_PORT=4000
LOG_LEVEL=info

# JWT Security
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
CUBE_JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# =============================================================================
# DATABASE CONFIGURATION (Primary)
# =============================================================================

# Database Type (postgres, mysql, mssql, snowflake, bigquery, redshift)
CUBE_DB_TYPE=postgres

# PostgreSQL Configuration
CUBE_DB_HOST=localhost
CUBE_DB_PORT=5432
CUBE_DB_NAME=aiser_world
CUBE_DB_USER=aiser
CUBE_DB_PASS=aiser_password
CUBE_DB_SCHEMA=public
CUBE_DB_SSL=false

# Connection Pool Settings
CUBE_DB_POOL_MIN=2
CUBE_DB_POOL_MAX=10

# =============================================================================
# EXTERNAL DATABASE CONFIGURATION (Optional)
# =============================================================================

# External Database for Data Federation
CUBE_EXT_DB_TYPE=
CUBE_EXT_DB_HOST=
CUBE_EXT_DB_PORT=
CUBE_EXT_DB_NAME=
CUBE_EXT_DB_USER=
CUBE_EXT_DB_PASS=
CUBE_EXT_DB_SCHEMA=

# =============================================================================
# CLOUD DATA WAREHOUSE CONFIGURATIONS
# =============================================================================

# Snowflake Configuration
CUBE_DB_SNOWFLAKE_ACCOUNT=
CUBE_DB_SNOWFLAKE_WAREHOUSE=
CUBE_DB_SNOWFLAKE_ROLE=

# BigQuery Configuration
CUBE_DB_BQ_PROJECT_ID=
CUBE_DB_BQ_KEY_FILE=
CUBE_DB_BQ_LOCATION=US

# =============================================================================
# REDIS CACHE CONFIGURATION
# =============================================================================

# Redis Connection
REDIS_URL=redis://localhost:6379

# Cache Configuration
CUBE_CACHE_PREFIX=cube:
CUBE_CACHE_TTL=3600

# Query Cache
CUBE_QUERY_CACHE_ENABLED=true
CUBE_QUERY_CACHE_TTL=600
CUBE_QUERY_CACHE_MAX_SIZE=1000

# =============================================================================
# PRE-AGGREGATIONS CONFIGURATION
# =============================================================================

# Pre-aggregations Settings
CUBE_PRE_AGG_ENABLED=true
CUBE_PRE_AGG_SCHEMA=pre_aggregations
CUBE_PRE_AGG_REFRESH=300
CUBE_PRE_AGG_MAX_AGE=86400

# =============================================================================
# MULTI-TENANT CONFIGURATION
# =============================================================================

# Tenant Database Naming
# Format: {CUBE_DB_NAME}_{tenant_id}
# Example: aiser_world_tenant1, aiser_world_tenant2

# Default Tenant (for development)
DEFAULT_TENANT_ID=default

# =============================================================================
# PERFORMANCE & MONITORING
# =============================================================================

# Telemetry
CUBE_TELEMETRY=false

# WebSocket Support
CUBE_WEB_SOCKETS=true

# Scheduled Refresh
CUBE_SCHEDULED_REFRESH=true
CUBE_SCHEDULED_REFRESH_TIMER=30

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# API Security
CUBE_API_SECRET=your-cube-api-secret-change-this

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Development Mode
CUBE_DEV_MODE=true

# Playground
CUBE_PLAYGROUND_ENABLED=true

# Schema Compilation
CUBE_SCHEMA_COMPILATION_CACHE=true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Levels: error, warn, info, debug
LOG_LEVEL=info

# Log Format: json, simple
LOG_FORMAT=json

# =============================================================================
# ENTERPRISE FEATURES
# =============================================================================

# Multi-tenancy
MULTI_TENANT_ENABLED=true

# Data Governance
DATA_LINEAGE_ENABLED=true
AUDIT_LOGGING_ENABLED=true

# Advanced Caching
INTELLIGENT_CACHE_ENABLED=true
CACHE_WARMING_ENABLED=true

# =============================================================================
# INTEGRATION CONFIGURATION
# =============================================================================

# LiteLLM Integration
LITELLM_ENDPOINT=http://localhost:8001
LITELLM_API_KEY=

# MCP ECharts Integration
MCP_ECHARTS_ENDPOINT=http://localhost:8002
MCP_ECHARTS_ENABLED=true

# Authentication Service
AUTH_SERVICE_ENDPOINT=http://localhost:5000
AUTH_SERVICE_API_KEY=

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Health Check
HEALTH_CHECK_ENABLED=true

# Metrics Collection
METRICS_ENABLED=true
METRICS_ENDPOINT=/metrics

# Performance Monitoring
PERFORMANCE_MONITORING_ENABLED=true

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# Development Environment
# - Use local PostgreSQL
# - Enable playground and dev mode
# - Relaxed security settings

# Staging Environment
# - Use cloud database
# - Enable pre-aggregations
# - Production-like security

# Production Environment
# - Use production database
# - Enable all performance features
# - Strict security settings
# - Monitoring and alerting enabled