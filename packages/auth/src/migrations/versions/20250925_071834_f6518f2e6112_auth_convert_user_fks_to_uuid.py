"""auth: convert user fks to uuid

Revision ID: f6518f2e6112
Revises: 2419d98ddcf8
Create Date: 2025-09-25 07:18:34.974289

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f6518f2e6112'
down_revision: Union[str, None] = '2419d98ddcf8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('projects')
    op.drop_index(op.f('idx_charts_conversation_id'), table_name='charts')
    op.drop_index(op.f('idx_charts_created_at'), table_name='charts')
    op.drop_index(op.f('idx_charts_tenant_id'), table_name='charts')
    op.drop_index(op.f('idx_charts_type'), table_name='charts')
    op.drop_table('charts')
    op.drop_table('data_sources')
    op.drop_index(op.f('idx_users_created_at'), table_name='users')
    op.drop_index(op.f('idx_users_status'), table_name='users')
    op.drop_index(op.f('idx_users_tenant_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('idx_conversation_created_at'), table_name='conversation')
    op.drop_index(op.f('idx_conversation_tenant_id'), table_name='conversation')
    op.drop_table('conversation')
    op.drop_table('roles')
    op.drop_table('organizations')
    op.drop_table('dashboard_widgets')
    op.drop_table('project_data_source')
    op.drop_table('dashboards')
    op.drop_table('user_organizations')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_organizations',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=50), server_default=sa.text("'member'::character varying"), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('user_organizations_organization_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_organizations_pkey'))
    )
    op.create_table('dashboards',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('layout_config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('theme_config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('global_filters', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('refresh_interval', sa.INTEGER(), server_default=sa.text('300'), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_template', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('max_widgets', sa.INTEGER(), server_default=sa.text('10'), autoincrement=False, nullable=True),
    sa.Column('max_pages', sa.INTEGER(), server_default=sa.text('5'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('last_viewed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='dashboards_project_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dashboards_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('project_data_source',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_source_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data_source_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('added_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('project_data_source_project_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('project_data_source_pkey'))
    )
    op.create_table('dashboard_widgets',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('dashboard_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('widget_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('chart_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('data_config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('style_config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('x', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('y', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('width', sa.INTEGER(), server_default=sa.text('4'), autoincrement=False, nullable=True),
    sa.Column('height', sa.INTEGER(), server_default=sa.text('3'), autoincrement=False, nullable=True),
    sa.Column('z_index', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('is_visible', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_locked', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('is_resizable', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_draggable', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dashboard_id'], ['dashboards.id'], name=op.f('dashboard_widgets_dashboard_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('dashboard_widgets_pkey'))
    )
    op.create_table('organizations',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('organizations_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('slug', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('logo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('plan_type', sa.VARCHAR(length=20), server_default=sa.text("'free'::character varying"), autoincrement=False, nullable=True),
    sa.Column('ai_credits_used', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('ai_credits_limit', sa.INTEGER(), server_default=sa.text('50'), autoincrement=False, nullable=True),
    sa.Column('trial_ends_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_trial_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('max_users', sa.INTEGER(), server_default=sa.text('100'), autoincrement=False, nullable=True),
    sa.Column('max_projects', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=True),
    sa.Column('max_storage_gb', sa.INTEGER(), server_default=sa.text('100'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='organizations_pkey'),
    sa.UniqueConstraint('name', name='organizations_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('slug', name='organizations_slug_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('permissions', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_system_role', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('roles_pkey')),
    sa.UniqueConstraint('name', name=op.f('roles_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('conversation',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), server_default=sa.text("'chat2chart'::character varying"), autoincrement=False, nullable=True),
    sa.Column('tenant_id', sa.VARCHAR(length=50), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='conversation_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('idx_conversation_tenant_id'), 'conversation', ['tenant_id'], unique=False)
    op.create_index(op.f('idx_conversation_created_at'), 'conversation', ['created_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=50), server_default=sa.text("'user'::character varying"), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'active'::character varying"), autoincrement=False, nullable=True),
    sa.Column('tenant_id', sa.VARCHAR(length=50), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('last_login_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('new_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('email', name=op.f('users_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name=op.f('users_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('idx_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_index(op.f('idx_users_status'), 'users', ['status'], unique=False)
    op.create_index(op.f('idx_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_table('data_sources',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('format', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('db_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('row_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('schema', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('connection_config', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('original_filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tenant_id', sa.VARCHAR(), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('last_accessed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('data_sources_pkey'))
    )
    op.create_table('charts',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('chart_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('chart_library', sa.VARCHAR(length=50), server_default=sa.text("'echarts'::character varying"), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=True),
    sa.Column('complexity_score', sa.INTEGER(), server_default=sa.text('5'), autoincrement=False, nullable=True),
    sa.Column('data_source', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('conversation_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('tenant_id', sa.VARCHAR(length=50), server_default=sa.text("'default'::character varying"), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversation.id'], name=op.f('charts_conversation_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('charts_pkey'))
    )
    op.create_index(op.f('idx_charts_type'), 'charts', ['chart_type'], unique=False)
    op.create_index(op.f('idx_charts_tenant_id'), 'charts', ['tenant_id'], unique=False)
    op.create_index(op.f('idx_charts_created_at'), 'charts', ['created_at'], unique=False)
    op.create_index(op.f('idx_charts_conversation_id'), 'charts', ['conversation_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('organization_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('settings', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name=op.f('projects_organization_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('projects_pkey'))
    )
    # ### end Alembic commands ###
